runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
install.package(shinythemes)
install.package("shinythemes")
install.packages("shinythemes")
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
runApp('School/INFO201/HTML_CSS/web-materials/exercise-1')
?midwest
shiny::runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
View(midwest)
# ui.R
library(shiny)
# server.R
library(dplyr)
library(ggplot2)
# Data wrangling
data <- midwest %>% group_by(state)
View(data)
# Data wrangling
by_sate <- midwest %>%
group_by(state) %>%
summarise(poptotal = sum(poptotal),
popwhite = sum(popwhite),
popblack = sum(popblack),
popamerindian = sum(popamerindian),
popasian = sum(popasian),
popother = sum(popother))
View(by_sate)
# Data wrangling
by_state <- midwest %>%
group_by(state) %>%
summarise(poptotal = sum(poptotal),
popwhite = sum(popwhite),
popblack = sum(popblack),
popamerindian = sum(popamerindian),
popasian = sum(popasian),
popother = sum(popother))
View(by_state)
?selectInput
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
midwest$state[1]
midwest$state[[1]]
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = paste0("perc",input$race)), stat = "identity") +
labs(x = paste0("Percentage", input$race),
y = input$state) +
coord_flip()
race_hold <- paste0("perc",input$race)
filtered <- midwest %>%
filter(state == input$state) %>%
select_(~ race_hold)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input$race),
y = input$state) +
coord_flip()
filtered <- midwest %>%
filter(state == input$state) %>%
select_(~ race_hold)
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state) %>%
select_(~ race_hold)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
View(filtered)
View(plot)
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county$ADAMS, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county[ADAMS], y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
county[ADAMS]
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
race_hold <- as.name(paste0("perc",input_race))
input_race <- "white"
input_state <- "IL"
race_hold <- as.name(paste0("perc",input_race))
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
input_race <- "white"
input_state <- "IL"
race_hold <- as.name(paste0("perc",input_race))
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes_string(x = county, y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
input_race <- "white"
input_state <- "IL"
race_hold <- paste0("perc",input_race)
filtered <- midwest %>%
filter(state == input_state)
plot <- ggplot(data = filtered) +
geom_bar(mapping = aes_string(x = "county", y = race_hold), stat = "identity") +
labs(x = paste0("Percentage", input_race),
y = input_state) +
coord_flip()
plot
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
?geom_bar
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
?plotOutput
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
paste0("oof ","off")
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
library(maps)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
?selectInput
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
# server.R
library(dplyr)
library(ggplot2)
library(maps)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
states <- map_data("state")
View(states)
mw_df <- subset(states, region %in% c("ohio",
"michigan",
"illinois",
"indiana",
"wisconsin"))
View(mw_df)
mw_map <- ggplot(data = mw_map) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "darkorange3",
color = "black") +
coord_fixed(1.3)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
counties <- map_data("county")
counties_df <- subset(counties, region %in% c("ohio",
"michigan",
"illinois",
"indiana",
"wisconsin"))
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
View(counties_df)
View(counties_df)
# In order to map our data from midwest we need to join it to our outline
colnames(midwest)[colnames(midwest)=="county"] <- "subregion"
cacopa <- inner_join(counties_df, midwest, by = "subregion")
View(cacopa)
midwest$subregion <- tolower(midwest$subregion)
View(midwest)
joined <- inner_join(counties_df, midwest, by = "subregion")
View(joined)
View(midwest)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
midwest$state
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
library(shinythemes)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
?rgb
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='belmontmat', token='C47F730C379CE6E536586FC8FF1B901C', secret='RpmCSRz9kEH8eo4Ntt+/At4KOtJrMuxhCP5gwaze')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
# ui.R
library(shiny)
library(shinythemes)
library(dplyr)
library(ggplot2)
library(maps)
# server.R
library(shiny)
library(shinythemes)
library(dplyr)
library(ggplot2)
library(maps)
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
runApp('School/INFO201/HW.8.new/a8-shiny-belmontmat')
styler:::style_active_file()
styler:::style_active_file()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
shinyUI(navbarPage(
theme = shinytheme("cerulean"),
"Project",
# Create a tab panel for your map
tabPanel(
"Overview",
titlePanel(""),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to map
selectInput(
"mapvar",
label = "Variable to Map",
choices = list(
"Population" = "poptotal",
"Population Density" = "popdensity",
"Percentage of Population That is White" = "percwhite"
)
)
)
),
# Main panel: display map
mainPanel(
tags$link(rel = "stylesheet", type = "text/css", href = "style.css"),
tags$h2(id = "main-heading", ""),
plotOutput("map")
)
)
),
# Create a tabPanel to show your bar plot
tabPanel(
"Tab 2",
titlePanel(""),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
selectInput(
)
),
mainPanel(
tags$h2(id = "main-heading", ""),
plotOutput()
)
)
),
tabPanel(
"Tab 3",
titlePanel(""),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
selectInput(
)
),
mainPanel(
tags$h2(id = "main-heading", ""),
plotOutput()
)
)
),
tabPanel(
"Tab 4",
titlePanel(""),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
selectInput(
)
),
mainPanel(
tags$h2(id = "main-heading", ""),
plotOutput()
)
)
),
tabPanel(
"Tab 5",
titlePanel(""),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
selectInput(
)
),
mainPanel(
tags$h2(id = "main-heading", ""),
plotOutput()
)
)
)
)
shiny::runApp('School/INFO201/Project/Info-201-BA3')
runApp('School/INFO201/Project/Info-201-BA3')
install.packages(countrycode)
install.packages("countrycode")
# Get our temperature data
temp <- read.csv("data/data-society-global-climate-change-data/GlobalLandTemperaturesByState.csv",
stringsAsFactors = FALSE)
# Get our temperature data
temp <- read.csv("./data/data-society-global-climate-change-data/GlobalLandTemperaturesByState.csv",
stringsAsFactors = FALSE)
# Get our temperature data
temp <- read.csv("../data/data-society-global-climate-change-data/GlobalLandTemperaturesByState.csv",
stringsAsFactors = FALSE)
setwd("~/School/INFO201/Project/Info-201-BA3/scripts")
# Get our temperature data
temp <- read.csv("./data/data-society-global-climate-change-data/GlobalLandTemperaturesByState.csv",
stringsAsFactors = FALSE)
# Get our temperature data
temp <- read.csv("../data/data-society-global-climate-change-data/GlobalLandTemperaturesByState.csv",
stringsAsFactors = FALSE)
# Focus on the USA
temp <- temp %>% filter(Country == "United States")
# remove NAs
temp <- temp[complete.cases(temp),]
# Average the temp per year and state instead of monthly
temp$dt <- substr(temp$dt,1,4)
temp <- temp %>% group_by(dt, State) %>%
summarise(AverageTemperature = mean(AverageTemperature))
# Get map outlines
states <- map_data("state")
usa <- map_data("usa")
# In order to map our data we need to join it to our outline
# To do that we need to mfix some column names and Georgia
colnames(temp)[colnames(temp) == "State"] <- "region"
temp$region <- tolower(temp$region)
temp$region[temp$region == "georgia (state)"] <- "georgia"
joined <- full_join(states, temp, by = "region")
View(joined)
runApp('~/School/INFO201/Project/Info-201-BA3')
setwd("~/School/INFO201/Project/Info-201-BA3")
runApp()
runApp()
disaster_df <- read.csv("data/emdat-disasters/USA_disasters.csv")
disaster_df <- disaster_df %>%
filter(year == input$year) %>%
select(occurrence)
disaster_df <- read.csv("data/emdat-disasters/USA_disasters.csv")
disaster_df <- disaster_df %>%
filter(year == input$year) %>%
select(occurrence)
View(disaster_df)
runApp()
runApp()
devtools::install_github('hadley/ggplot2')
runApp()
runApp()
install.packages("ggplot2")
remove.packages("ggplot2", lib="~/R/win-library/3.4")
install.packages("ggplot2")
runApp()
install.packages("ggplot2")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
disasters <- read.csv("data/emdat-disasters/USA_disasters_gapless.csv", stringsAsFactors = FALSE)
View(disasters)
disasters <- read.csv("data/emdat-disasters/USA_disasters_gapless.csv", stringsAsFactors = FALSE)
View(disasters)
runApp()
plot_data <- disasters %>%
filter(year >= 1950) %>%
filter(year <= 2000)
View(plot_data)
View(plot_data)
plot_data$occurrence
plot_data$year
